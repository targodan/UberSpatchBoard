/*
 * The MIT License
 *
 * Copyright 2017 Luca Corbatto.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'edu.sc.seis.launch4j' version '2.4.1'
}

apply plugin: 'java'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = '1.0-alpha2'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'de.targodan.usb.Program'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.swinglabs.swingx', name: 'swingx-all', version: '1.6.5'
    compile group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.12'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.mockito:mockito-core:2.+"
}

compileJava {
    options.warnings = true
    options.deprecation = true
}

compileTestJava {
    options.warnings = true
    options.deprecation = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.2'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'UberSpatchBoard',
        	'Implementation-Version': version,
        	'Main-Class': 'de.targodan.usb.Program'
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'UberSpatchBoard',
        	'Implementation-Version': version,
        	'Main-Class': 'de.targodan.usb.Program'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                        'de/targodan/usb/ui/**',
                        'de/targodan/usb/Program.class',
                    ]
            )
        })
    }
}

launch4j {
    mainClassName = 'de.targodan.usb.Program'
}